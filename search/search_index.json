{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Executive Overview</p> <p>This Docker image provides a streamlined and efficient way to run the Mullvad VPN service within a containerized environment. By encapsulating the VPN functionality in a dedicated Docker image, users can enhance their privacy and security while using other applications and services in separate containers. This approach not only simplifies the management of VPN connections but also ensures that all network traffic from other containers can be securely routed through the VPN.</p> <p></p> <p>Use Cases</p> <ul> <li> <p>Secure Development Environments: Developers can use the VPN container to ensure that their development and testing environments are secure, protecting sensitive code and data from potential threats.</p> </li> <li> <p>Privacy-Conscious Browsing: Users can run web applications or browsers in separate containers that route their traffic through the VPN, ensuring that their online activities remain private.</p> </li> <li> <p>Accessing Geo-Restricted Content: By using a VPN, users can bypass geographical restrictions and access content that may be blocked in their region, such as streaming services or websites.</p> </li> <li> <p>Multi-Container Applications: In microservices architectures, where multiple containers communicate with each other, a VPN container can secure the communication between these services, ensuring that data remains protected.</p> </li> </ul>"},{"location":"#why-use-a-vpn-container","title":"Why Use a VPN Container?","text":"<ol> <li> <p>Enhanced Security: Running a VPN container helps protect sensitive data by encrypting internet traffic, making it more difficult for third parties to intercept or monitor communications.</p> </li> <li> <p>Privacy Protection: By routing traffic through a VPN, users can mask their IP addresses, providing an additional layer of anonymity while browsing the internet or using online services.</p> </li> <li> <p>Isolation of Network Traffic: Using a dedicated VPN container allows for better control over which containers route their traffic through the VPN, enabling users to selectively apply VPN protection to specific applications.</p> </li> <li> <p>Simplified Configuration: The Docker image comes pre-configured with Mullvad VPN, making it easy to set up and use without extensive networking knowledge. Users can quickly deploy the VPN service and connect to it with minimal effort.</p> </li> </ol>"},{"location":"resources/","title":"External Links and resources","text":"<p> Mkdocs-material Reference</p> <p> Mkdocs Reference</p> <p> QubesOS Documentation style guide</p>"},{"location":"building/","title":"Build your own Image using Docker","text":"<p>Docker Build<sup>1</sup> is one of Docker Engine's most used features. Whenever you are creating an image you are using Docker Build. Build is a key part of your software development life cycle allowing you to package and bundle your code and ship it anywhere.</p>"},{"location":"building/#steps-to-build","title":"Steps to build","text":"<ol> <li>Install Docker (see docs.docker.com)</li> <li>Clone the repo     Bash<pre><code>git clone https://github.com/rowland007/docker-mullvad.git\n</code></pre></li> <li><code>cd docker-mullvad</code></li> <li>Run     Bash<pre><code>docker build --no-cache --pull -t docker-mullvad:personal\n</code></pre></li> </ol>"},{"location":"building/#test-your-image","title":"Test your Image","text":"<p>Run</p> Bash<pre><code>docker run -d --privileged -v ./config:/config -e MULLVAD_ACCOUNT_TOKEN=&lt;changeme&gt; --name mullvad docker-mullvad:personal\n</code></pre> <ol> <li> <p>Docker Build Overview \u21a9</p> </li> </ol>"},{"location":"docker/","title":"Using Docker create a container","text":"<p>Warning</p> <p>It is recommended to use Docker Compose over the standard <code>docker run</code> command.</p>"},{"location":"docker/#steps","title":"Steps","text":"<ol> <li>Install Docker (see docs.docker.com)</li> <li>Pull the image     Bash<pre><code>docker pull ghcr.io/rowland007/docker-mullvad:latest\n</code></pre></li> <li>Have your Mullvad account number handy</li> <li>Change the <code>&lt;changeme&gt;</code> in the below command to your account number</li> <li>Run     Bash<pre><code>docker run -d --privileged -v ./config:/config -e MULLVAD_ACCOUNT_TOKEN=&lt;changeme&gt; --name mullvad ghcr.io/rowland007/docker-mullvad:latest\n</code></pre></li> </ol>"},{"location":"docker-compose/","title":"Using Docker Compose","text":""},{"location":"docker-compose/#steps","title":"Steps","text":"<ol> <li>Install Docker (see docs.docker.com)</li> <li>Download the <code>docker-compose.yml</code> and <code>.env</code> file from the repo</li> <li>Replace the <code>changeme</code> inside the <code>.env</code> file with your account number</li> <li>Run     Bash<pre><code>docker compose pull\n</code></pre></li> <li>Run     Bash<pre><code>docker compose up mullvad\n</code></pre></li> <li>Wait until you see your account login and the container become unresponsive.</li> <li>In a different terminal window, run     Bash<pre><code>docker stop mullvad\n</code></pre></li> <li>Now restart the container     Bash<pre><code>docker compose up mullvad -d\n</code></pre></li> <li>Get in the container     Bash<pre><code>docker exec -it mullvad /bin/bash\n</code></pre></li> <li>Check the status of Mullvad (within the container)     Bash<pre><code>mullvad status\n</code></pre></li> <li>If everything looks good, you can type <code>exit</code> to get out of the container.</li> </ol>"},{"location":"docker-swarm/","title":"Using Docker Swarm","text":"<p>This process is more complex and may not meet everyone's needs. It is provided if you want to create your own image that will utilize Docker Secrets. A more secure way of passing sensitve information to the container.</p>"},{"location":"docker-swarm/#key-security-benefits","title":"Key Security Benefits","text":""},{"location":"docker-swarm/#advantages-of-docker-secrets","title":"Advantages of Docker Secrets","text":"<ul> <li>Encrypted storage of sensitive information</li> <li>Secrets are only mounted when explicitly requested</li> <li>Scoped access control</li> <li>Rotatable without modifying the application code</li> </ul>"},{"location":"docker-swarm/#steps","title":"Steps","text":"<ol> <li>Install Docker (see docs.docker.com)</li> <li>Clone the repo     Bash<pre><code>git clone https://github.com/rowland007/docker-mullvad.git\n</code></pre></li> <li><code>cd docker-mullvad</code></li> <li>Modify the <code>entrypoint.sh</code> file to add line 6 Bash<pre><code>#!/bin/bash\n\nexport MULLVAD_SETTINGS_DIR=/config\n\n# Read the Mullvad account token from the secret file\nMULLVAD_ACCOUNT_TOKEN=$(cat /run/secrets/mullvad_account_token)\n\n# Start the daemon\nmullvad-daemon &amp;\nsleep 5\n\n# Configure and Login to Mullvad\nmullvad dns set default\nmullvad auto-connect set on\nmullvad account login $MULLVAD_ACCOUNT_TOKEN\n\n# Connect to VPN\nmullvad connect\n\n# Keep the container running\ntail -f /dev/null\n</code></pre></li> <li>Run the command below to create your own image     Bash<pre><code>docker build --no-cache --pull -t docker-mullvad:personal\n</code></pre></li> </ol>"},{"location":"docker-swarm/#run-docker-swarm","title":"Run Docker Swarm","text":"<ol> <li>Run <code>docker swarm init</code></li> <li>Create a Docker Secret replacing <code>your_mullvad_account_token</code> with your account number     Bash<pre><code>echo \"your_mullvad_account_token\" | docker secret create mullvad_account_token -\n</code></pre></li> <li>Modify the <code>docker-compose.yml</code> file to include \"secrets\"     YAML<pre><code>services:\n  mullvad:\n    image: docker-mullvad:personal\n    container_name: mullvad\n    hostname: mullvad\n    secrets:\n       - mullvad_account_token       \n    restart: always\n    privileged: true\nvolumes:\n   - mullvad_config:/config\nsecrets:\n  mullvad_account_token:\n    external: true\n</code></pre></li> <li>Run     Bash<pre><code>docker stack deploy -c docker-compose.yml mullvad\n</code></pre></li> </ol>"},{"location":"use-cases/","title":"Examples","text":"<p>Add <code>network_mode: service:mullvad</code> to another container's configuration to have it go through the VPN.</p>"},{"location":"use-cases/#simple-example","title":"Simple Example","text":"YAML<pre><code>services:\n    mullvad:\n        image: ghcr.io/rowland007/docker-mullvad:latest\n        container_name: mullvad\n        hostname: mullvad\n        environment:\n           - - MULLVAD_ACCOUNT_TOKEN=${MULLVAD_ACCOUNT_TOKEN}\n        restart: always\n        privileged: true\n        volumes:\n            - mullvad_config:/config\n    ip:\n        image: alpine\n        depends_on:\n            - mullvad\n        network_mode: service:mullvad\n        command: sh -c 'sleep 1; wget -q -O - https://ifconfig.me/ip; echo'\n\nvolumes:\n    mullvad_config:\n</code></pre>"},{"location":"use-cases/#expose-ports","title":"Expose Ports","text":"<p>If you have a service that normally exposes ports, but you want it to go through the VPN, you need to move those ports to the Mullvad service.</p> YAML<pre><code>services:\n    mullvad:\n        image: ghcr.io/rowland007/docker-mullvad:latest\n        container_name: mullvad\n        hostname: mullvad\n        restart: always\n        environment:\n            - MULLVAD_ACCOUNT_TOKEN=${MULLVAD_ACCOUNT_TOKEN}\n        privileged: true\n        ports:\n          - 8112:8112           # Deluge's WebGUI\n          - 6881:6881           # Deluge's Inbound Torrents\n          - 6881:6881/udp       # Deluge's Inbound Torrents\n        volumes:\n            - mullvad_config:/config\n    deluge:\n        image: lscr.io/linuxserver/deluge:latest\n        container_name: deluge\n        environment:\n          - PUID=1000\n          - PGID=1000\n          - TZ=Etc/UTC\n          - DELUGE_LOGLEVEL=error #optional\n        volumes:\n          - ./deluge/config:/config\n          - ./deluge_downloads:/downloads\n        restart: unless-stopped\n        depends_on:\n            - mullvad\n        network_mode: service:mullvad\n\nvolumes:\n    mullvad_config:\n</code></pre>"}]}